#include <iostream>
#include <ctime>
 
using namespace std;

void funcMultiplication(double** A, double ** B, double** C, int n){
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            C[i][j]=A[i][j] * B[i][j];
        }
    }
}

void funcOutput(double** M, int n) {
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            cout << fixed;
            cout.precision(4); //задает количество знаков после запятой
            cout << M[i][j] << "\t";
        }
        cout << endl;
    }
     cout << endl;
}

void funcDelete(double** M, int n){
 for (int i = 0; i < n; i++) {
    delete[] M[i];
 }
 delete[] M;
}

int main() {
 srand(time(NULL));
 int N;
 int c = 0;
 int d = 10;
 cout << "Введите размерность массива" << endl;
 cin >> N;
 cout << "\n";
 double **A, **B, **C;
 A = new double *[N]; //объявление указателя
 B = new double *[N]; //объявление указателя
 C = new double *[N]; //объявление указателя

 for (int i = 0; i < N; i++){
  A[i] = new double[N]; //выделение памяти-создание динамического массива
  for (int j = 0; j < N; j++){
    A[i][j] = (double)rand() / RAND_MAX * (c + (d - c)); 
  }
 }
 funcOutput(A, N);
 
 for (int i = 0; i < N; i++){
  B[i] = new double[N];//выделение памяти-создание динамического массива
  for (int j = 0; j < N; j++){
    B[i][j] = (double)rand() / RAND_MAX * (c + (d - c)); 
  }
 }
 funcOutput(B, N);
 
 for (int i = 0; i < N; i++){
    C[i] = new double[N];//выделение памяти-создание динамического массива
 }
 funcMultiplication(A, B, C, N);
 funcOutput(C, N);
 funcDelete(A, N);
 funcDelete(B, N);
 funcDelete(C, N);

}
